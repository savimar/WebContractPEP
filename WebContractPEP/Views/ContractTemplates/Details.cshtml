﻿@using DocumentFormat.OpenXml.EMMA
@using Microsoft.Ajax.Utilities
@using Newtonsoft.Json
@using WebContractPEP.Models
@using WebGrease.Css.Extensions
@model WebContractPEP.Models.ContractTemplate

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<link rel="stylesheet" type="text/css" href="~/Scripts/codemirror.css">
<link rel="stylesheet" type="text/css" href="~/Scripts/monokai.css">
<link rel="stylesheet" type="text/css" href="~/Content/bootstrap.css">
<link href="~/Content/summernote/font/summernote" rel="stylesheet" />

<script type="text/javascript" src="~/Scripts/codemirror.js"></script>
<script type="text/javascript" src="~/Scripts/xml.js"></script>
<script type="text/javascript" src="~/Scripts/formatting.js"></script>
<script type="text/javascript" src="~/Scripts/bootstrap.js"></script>

<link href="~/Scripts/summernote/summernote.css" rel="stylesheet" />
<script src="~/Scripts/summernote/summernote.js"></script>
<div>
    <h4>ContractTemplate</h4>
    <hr />
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

    </dl>
</div>

<div class="row">

    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-8 col-xl-8 col-xxl-8">
        <section id="loginForm">
            @using (Html.BeginForm("Index", "Home", new { ReturnUrl = ViewBag.ReturnUrl },
                FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {@Html.AntiForgeryToken()
            <i class="fa fa-link" aria-hidden="true"> </i><a href="http://summernote.org/"></a><hr />



            <div id="summernote" contenteditable="true"></div>
            @Html.TextAreaFor(model => model.FinalText)
            //Model.FinalText//TempData["text"]




                <div class="col-lg-3">
                    <button class="btn btn-save" id="btnSave" type="submit">
                        Сохранить шаблон
                    </button>
                    <button class="btn btn-success" id="btnSubmit" type="submit">
                        Подписать и отправить
                    </button>
                </div>

        }
        </section>
    </div>
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-4 col-xl-4 col-xxl-4 " id="fieldConteyiner">
        @Html.ActionLink(
            "Добавить",
            "CreateWithTemplate",                     // controller action
            "FillFields",        // controller
            new {id= Model.ContactTemplateId },         // action parameters aka route values
            new { @class = "btn btn-info" }) 
        
        
        @foreach (FillField field in Model.Fields)
        {

            string NameField = field.FieldName + "Block";
            <section id=@NameField>
                @using (Html.BeginForm((Html.BeginForm("FillField", "ContractTemplates", FormMethod.Post))))
                {
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-4 col-xl-4 col-xxl-4 " id="field">
                        @Html.Hidden("FieldId", field.FieldId)
                        @Html.Label(field.FieldName)
                        @Html.Label("{{" + field.FieldName + "}}", new { id = "id_field_" + field.FieldName })
                        @if (!field.AutoFieldValue.IsNullOrWhiteSpace())
                        {
                            @Html.Label(field.AutoFieldValue)
                        }
                        @if (field.IsFilledExecutor)
                        {
                            @Html.Label("Введите Ваше значение поля")
                            //@Html.TextBox("Value")
                            @Html.Editor("FieldValue" + field.FieldId)

                        }
                        else if (field.IsFilledExecutor && field.IsFilledClient)
                        {
                            @Html.Label("Введите Ваше значение поля")
                            //@Html.TextBox("Value")
                            @Html.Editor("FieldValue" + +field.FieldId)
                        }
                        else
                        {

                            @Html.Label("Поле заполнит другой клиент")
                            @Html.TextBox("FieldValue" + +field.FieldId, null, new { @readonly = "readonly" })

                        }
                        <button name="action" value="copy">Скопировать текст в договор</button>
                        <button name="action" value="edit">Редактировать</button>
                        <button name="action" value="delete">Удалить</button>

                    </div>


                }
            </section>
        }


    </div>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ContactTemplateId }) |
    @Html.ActionLink("Back to List", "Index")
</p>
@section Scripts {

    <script >


        $(document).ready(function () {
            /**/

            $('#FinalText').summernote({
                /**/
                height: 1000,                 // set editor height
                minHeight: null,             // set minimum height of editor
                maxHeight: null,
                lang: 'ru-RU',
                fontNames: ['Arial', 'Times New Roman', 'Helvetica'],
                focus: true,
                disableDragAndDrop: true,
                codemirror: {
                    theme: 'monokai',
                    mode: "text/html",
                    lineNumbers: true,
                    tabMode: 'indent'
                }
            });
            
        });
     
        $(document).ready(function(){           
            $('#FieldValue.text-box.single-line').on('change', '#FieldValue.text-box.single-line', field, function (event) {  
                event.preventDefault();
                alert(field);
                console.log(field);
                var value = $(this).val();
                if (!$(this).val()) {  
                    var oldValue = $('#id_field').val();
                    var eventData = { myData: 'information here' };
                        eventData = oldvalue.replace(value);
                        $('#FinalText').summernote(event.data.myData);
                        console.log(value);
                        console.log(oldvalue);
                        console.log(event.data.myData);
                        alert(field);
                       
                    };
                });
            });
        
    </script>

}